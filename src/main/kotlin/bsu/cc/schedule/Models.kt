package bsu.cc.schedule

import com.brein.time.timeintervals.intervals.IInterval
import com.brein.time.timeintervals.intervals.NumberInterval
import java.io.Serializable
import java.time.DayOfWeek
import java.time.LocalDate
import java.time.LocalTime


data class Instructor(val firstName: String, val lastName: String)

data class DateInterval(val startDate: LocalDate, val endDate: LocalDate)

class ClassSchedule(val startTime: LocalTime,
                    val endTime: LocalTime,
                    val meetingDays: Set<DayOfWeek>,
                    val meetingDates: DateInterval,
                    val subject: String,
                    val catalogNumber: String,
                    val section: String,
                    val room: String,
                    val instructors: Set<Instructor>,
                    val description: String
                    ) : IInterval<Long> { //NumberInterval may also work

    /** generated by intellij **/
    override fun compareTo(other: IInterval<out Comparable<*>>?): Int {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override fun getUniqueIdentifier(): String = "[$startTime, $endTime]"


    override fun getNormStart(): Long {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

    override fun getNormEnd(): Long {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }

}

